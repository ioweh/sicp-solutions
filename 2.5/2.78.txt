
All we need to do is to modify the procedures in the following way:


(define (attach-tag type-tag contents)
  (cond ((number? contents) contents)
	(true (cons type-tag contents))))
;Value: attach-tag

(attach-tag 'scheme-number 3)
;Value: 3


(define (type-tag datum)
  (cond ((pair? datum) (car datum))
	((number? datum) 'scheme-number)
	(true (error "Bad tagged datum -- TYPE-TAG" datum))))
;Value: type-tag

(type-tag 3)
;Value: scheme-number


(define (contents datum)
  (cond ((pair? datum) (cdr datum))
	((number? datum) datum)
	(true (error "Bad tagged datum -- CONTENTS" datum))))
;Value: contents

(contents 3)
;Value: 3


Check the apply-generic procedure to see how it works.


Note: after the changes, we can rewrite the install-scheme-number-package procedure in the following, shorter way:

(define (install-scheme-number-package)
  (define (tag x)
    (attach-tag 'scheme-number x))
  (put 'add '(scheme-number scheme-number) +)
  (put 'sub '(scheme-number scheme-number) -)
  (put 'mul '(scheme-number scheme-number) *)
  (put 'div '(scheme-number scheme-number) /)
  (put 'make 'scheme-number
       (lambda (x) (tag x)))
  'done)
;Value: install-scheme-number-package

(install-scheme-number-package)
;Value: done

And then test it like here:

(add 1 (add (make-scheme-number 3) (make-scheme-number 4)))
;Value: 8

