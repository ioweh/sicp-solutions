
(load "C:\\Users\\User\\Desktop\\sicp-solutions\\2.5\\algebra\\generic-arithmetic-operations.scm")
;    Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\generic-arithmetic-operations.scm"... 
;      Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\integer-package.scm"... done
;      Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\real-package.scm"... done
;      Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\rational-package.scm"... done
;      Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\rectangular-package.scm"... done
;      Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\polar-package.scm"... done
;      Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\complex-package.scm"... done
;      Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\polynomial-package.scm"... done
;    ... done
;Value: make-term


(define p1 (make-polynomial 'x (list (make-term 1 5) (make-term 3 4))))
;Value: p1


p1
;Value 31: (polynomial x (1 5) (3 4))


(negate p1)
;Value 32: (polynomial x (1 -5) (3 -4))





(=zero? p1)
;Value: #f

; just shot myself in the foot

(put 'negate '(polynomial)
     (lambda (p) (map (lambda (term) (negate (coeff term)))) (term-list p)))



(define p2 (make-polynomial 'x (list (make-term 2 (make-polynomial 'y ())))))
;Value: p2

p2
;Value 33: (polynomial x (2 (polynomial y)))

(negate p2)
;Value 34: (polynomial x (2 (polynomial y)))

(define p3 (make-polynomial 'x (list (make-term 2 (make-polynomial 'y (list (make-term 8 9)))))))
;Value: p3

p3
;Value 35: (polynomial x (2 (polynomial y (8 9))))

(negate p3)
;Value 36: (polynomial x (2 (polynomial y (8 -9))))






(load "C:\\Users\\User\\Desktop\\sicp-solutions\\2.5\\algebra\\generic-arithmetic-operations.scm")
;Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\generic-arithmetic-operations.scm"... 
;  Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\integer-package.scm"... done
;  Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\real-package.scm"... done
;  Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\rational-package.scm"... done
;  Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\rectangular-package.scm"... done
;  Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\polar-package.scm"... done
;  Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\complex-package.scm"... done
;  Loading "\\users\\user\\desktop\\sicp-solutions\\2.5\\algebra\\number-packages\\polynomial-package.scm"... done
;... done
;Value: make-term



(equ? p1 p1)
;Value: #t

(equ? p1 p2)
;Value: #f


(define p1 (make-polynomial 'x (list (make-term 1 5) (make-term 3 4))))
;Value: p1

p1
;Value 11: (polynomial x (1 5) (3 4))

(define p2 (make-polynomial 'x (list (make-term 2 (make-polynomial 'y ())))))
;Value: p2

(define p3 (make-polynomial 'x (list (make-term 2 (make-polynomial 'y (list (make-term 8 9)))))))
;Value: p3


(negate p1)
;Value 20: (polynomial x (1 -5) (3 -4))


(sub p1 p2)
;Value 46: (polynomial x (1 5) (3 4))

(add p1 p2)
;Value 47: (polynomial x (1 5) (3 4))


(sub p1 p2)
;Value 26: (polynomial x (1 5) (3 4))

p1
;Value 11: (polynomial x (1 5) (3 4))

p2
;Value 22: (polynomial x (2 (polynomial y)))

(sub p1 p1)
;Value 27: (polynomial x (3 4) (1 5) (3 4))

(negate p1)
;Value 28: (polynomial x (1 -5) (3 -4))


(add p1 p1)
;Value 29: (polynomial x (1 10) (3 8))

(add p1 (negate p1))
;Value 30: (polynomial x)

(sub p1 p1)
;Value 31: (polynomial x)

p1
;Value 11: (polynomial x (1 5) (3 4))

p2
;Value 22: (polynomial x (2 (polynomial y)))

(sub p1 p2)
;Value 32: (polynomial x (1 5) (3 4))

(negate p2)
;Value 33: (polynomial x (2 (polynomial y)))

(add p1 p2)
;Value 34: (polynomial x (1 5) (3 4))

(define p4 (make-polynomial 'x (list (make-term 2 4))))
;Value: p4

p4
;Value 36: (polynomial x (2 4))

(add p1 p4)
;Value 37: (polynomial x (2 4) (1 5) (3 4))

p1
;Value 11: (polynomial x (1 5) (3 4))

p4
;Value 36: (polynomial x (2 4))


(sub p1 p4)
;Value 41: (polynomial x (2 -4) (1 5) (3 4))


p3
;Value 35: (polynomial x (2 (polynomial y (8 9))))

(add p1 p1)
;Value 39: (polynomial x (1 10) (3 8))

(add p3 p3)
;Value 40: (polynomial x (2 (polynomial y (8 18))))



p4
;Value 36: (polynomial x (2 4))

(add 4 p4)
;Quit!

p1
;Value 11: (polynomial x (1 5) (3 4))

(define p5 (make-polynomial 'x (list (make-term 1 3))))
;Value: p5

p5
;Value 43: (polynomial x (1 3))

(sub p1 p5)
;Value 44: (polynomial x (1 2) (3 4))

(sub p5 p1)
;Value 45: (polynomial x (1 -2) (3 -4))


p1
;Value 11: (polynomial x (1 5) (3 4))

p2
;Value 22: (polynomial x (2 (polynomial y)))

(sub p1 p2)
;Value 48: (polynomial x (1 5) (3 4))

(add p1 p2)
;Value 49: (polynomial x (1 5) (3 4))

(define p6 (make-polynomial 'x (list (make-term 2 87))))
;Value: p6

(add p1 p6)
;Value 51: (polynomial x (2 87) (1 5) (3 4))

(add p1 p2)
;Value 52: (polynomial x (1 5) (3 4))

(add p2 p1)
;Value 53: (polynomial x (1 5) (3 4))

p2
;Value 22: (polynomial x (2 (polynomial y)))

(=zero? (make-polynomial 'y '()))
;Value: #t

p1
;Value 11: (polynomial x (1 5) (3 4))

p2
;Value 22: (polynomial x (2 (polynomial y)))

p3
;Value 35: (polynomial x (2 (polynomial y (8 9))))

(add p1 p3)
;Value 54: (polynomial x (2 (polynomial y (8 9))) (1 5) (3 4))

(sub p1 p3)
;Value 55: (polynomial x (2 (polynomial y (8 -9))) (1 5) (3 4))


